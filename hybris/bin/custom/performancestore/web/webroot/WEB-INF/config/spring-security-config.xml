<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2015 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- Ignores url(s) that match paths specified in the set -->
	<bean id="excludeUrlRequestMatcher"
		  class="com.performance.security.ExcludeUrlRequestMatcher">
		<property name="excludeUrlSet" ref="excludeUrlSet"/>
		<property name="pathMatcher" ref="defaultPathMatcher"/>
	</bean>

	<!-- The set of url(s) to exclude from the 'Default security config'-->
	<bean id="excludeUrlSet" class="java.util.HashSet"/>

	<!-- Path matcher to use, AntPathMatcher is the default -->
	<alias name="antPathMatcher" alias="defaultPathMatcher"/>
	<bean id="antPathMatcher" class="org.springframework.util.AntPathMatcher"/>

	<!-- Default security config -->

	<bean id="b2bAccessDeniedHandler"
		  class="com.performance.security.DefaultAccessDeniedHandler"/>

	<bean id="acceleratorAuthenticationProvider"
		  class="com.performance.security.AcceleratorAuthenticationProvider">
		<property name="bruteForceAttackCounter" ref="bruteForceAttackCounter"/>
		<property name="cartService" ref="cartService"/>
		<property name="userService" ref="userService"/>
		<property name="modelService" ref="modelService"/>
		<property name="preAuthenticationChecks" ref="rejectUserPreAuthenticationChecks"/>
		<property name="userDetailsService" ref="originalUidUserDetailsService"/>
		<property name="adminGroup" value="ROLE_ADMINGROUP"/>
		<property name="b2bUserGroupProvider" ref="b2bUserGroupProvider"/>
		<aop:scoped-proxy/>
	</bean>

	<bean id="rejectUserPreAuthenticationChecks"
		  class="de.hybris.platform.spring.security.RejectUserPreAuthenticationChecks">
		<property name="allowedUserTypes">
			<list>
				<value>B2BCustomer</value>
			</list>
		</property>
	</bean>

	<bean id="coreUserDetailsService" class="de.hybris.platform.spring.security.CoreUserDetailsService"/>

	<bean id="guidCookieStrategy"
		  class="com.performance.security.impl.DefaultGUIDCookieStrategy"
			>
		<property name="cookieGenerator" ref="guidCookieGenerator"/>
	</bean>


	<alias name="defaultGuidCookieGenerator" alias="guidCookieGenerator"/>
	<bean id="defaultGuidCookieGenerator"
		  class="com.performance.security.cookie.EnhancedCookieGenerator">
		<property name="cookieSecure" value="true"/>
		<property name="cookieName" value="acceleratorSecureGUID"/>
		<property name="httpOnly" value="true"/>
	</bean>

	<bean id="autoLoginStrategy"
		  class="com.performance.security.impl.DefaultAutoLoginStrategy">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="customerFacade" ref="customerFacade"/>
		<property name="guidCookieStrategy" ref="guidCookieStrategy"/>
		<property name="rememberMeServices" ref="rememberMeServices"/>
	</bean>

	<bean id="httpSessionRequestCache"
		  class="com.performance.security.impl.WebHttpSessionRequestCache">
		<property name="sessionService" ref="sessionService"/>
	</bean>

	<bean id="redirectStrategy" class="org.springframework.security.web.DefaultRedirectStrategy"/>


	<!-- Login Success Handlers -->

	<bean id="loginGuidAuthenticationSuccessHandler"
		  class="com.performance.security.GUIDAuthenticationSuccessHandler">
		<property name="authenticationSuccessHandler" ref="loginAuthenticationSuccessHandler"/>
		<property name="guidCookieStrategy" ref="guidCookieStrategy"/>
		<aop:scoped-proxy/>
	</bean>

	<alias name="defaultLoginAuthenticationSuccessHandler" alias="loginAuthenticationSuccessHandler"/>
	<bean id="defaultLoginAuthenticationSuccessHandler"
		  class="com.performance.security.StorefrontAuthenticationSuccessHandler">
		<property name="customerFacade" ref="customerFacade"/>
		<property name="defaultTargetUrl" value="/my-account"/>
		<property name="useReferer" value="false"/>
		<property name="requestCache" ref="httpSessionRequestCache"/>
		<property name="uiExperienceService" ref="uiExperienceService"/>
		<property name="sessionService" ref="sessionService"/>
		<property name="cartFacade" ref="cartFacade"/>
		<property name="forceDefaultTargetForUiExperienceLevel">
			<map key-type="de.hybris.platform.commerceservices.enums.UiExperienceLevel"
				 value-type="java.lang.Boolean">
				<entry key="DESKTOP" value="false"/>
				<entry key="MOBILE" value="false"/>
			</map>
		</property>
		<property name="bruteForceAttackCounter" ref="bruteForceAttackCounter"/>
	</bean>

	<bean id="loginCheckoutGuidAuthenticationSuccessHandler"
		  class="com.performance.security.GUIDAuthenticationSuccessHandler">
		<property name="authenticationSuccessHandler" ref="loginCheckoutAuthenticationSuccessHandler"/>
		<property name="guidCookieStrategy" ref="guidCookieStrategy"/>
		<aop:scoped-proxy/>
	</bean>

	<bean id="loginCheckoutAuthenticationSuccessHandler"
		  class="com.performance.security.StorefrontAuthenticationSuccessHandler">
		<property name="customerFacade" ref="customerFacade"/>
		<property name="defaultTargetUrl" value="/checkout"/>
		<property name="uiExperienceService" ref="uiExperienceService"/>
		<property name="sessionService" ref="sessionService"/>
		<property name="cartFacade" ref="cartFacade"/>
		<property name="forceDefaultTargetForUiExperienceLevel">
			<map key-type="de.hybris.platform.commerceservices.enums.UiExperienceLevel"
				 value-type="java.lang.Boolean">
				<entry key="DESKTOP" value="true"/>
				<entry key="MOBILE" value="true"/>
			</map>
		</property>
		<property name="bruteForceAttackCounter" ref="bruteForceAttackCounter"/>
	</bean>


	<!-- Login Failure Handlers -->
	<bean id="bruteForceAttackCounter"
		  class="com.performance.security.impl.DefaultBruteForceAttackCounter">
		<constructor-arg name="maxFailedLogins" value="5"/>
		<constructor-arg name="cacheExpiration" value="60"/>
		<constructor-arg name="cacheSizeLimit" value="1000"/>
	</bean>

	<!-- Login Failure Handlers -->

	<bean id="loginAuthenticationFailureHandler"
		  class="com.performance.security.LoginAuthenticationFailureHandler">
		<property name="bruteForceAttackCounter" ref="bruteForceAttackCounter"/>
		<property name="defaultFailureUrl" value="/login?error=true"/>
		<aop:scoped-proxy/>
	</bean>

	<bean id="loginCheckoutAuthenticationFailureHandler"
		  class="com.performance.security.LoginAuthenticationFailureHandler">
		<property name="bruteForceAttackCounter" ref="bruteForceAttackCounter"/>
		<property name="defaultFailureUrl" value="/login/checkout?error=true"/>
		<aop:scoped-proxy/>
	</bean>


	<!-- Logout Success Handler -->

	<bean id="logoutSuccessHandler"
		  class="com.performance.security.StorefrontLogoutSuccessHandler">
		<property name="defaultTargetUrl" value="/?logout=true"/>
		<property name="guidCookieStrategy" ref="guidCookieStrategy"/>
		<property name="useReferer" value="true"/>
		<property name="restrictedPages">
			<list>
				<value>/my-account</value>
				<value>/checkout</value>
			</list>
		</property>
		<aop:scoped-proxy/>
	</bean>

	<!-- Remember Me -->

	<bean id="rememberMeProcessingFilter"
		  class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<property name="rememberMeServices" ref="rememberMeServices"/>
		<property name="authenticationManager" ref="authenticationManager"/>
	</bean>

	<bean id="rememberMeServices"
		  class="com.performance.security.AcceleratorRememberMeServices">
		<property name="userDetailsService" ref="originalUidUserDetailsService"/>
		<property name="key" value="performancestore"/>
		<property name="cookieName" value="performancestoreRememberMe"/>
		<property name="alwaysRemember" value="true"/>
		<property name="userService" ref="userService"/>
		<property name="useSecureCookie" value="false"/>
		<property name="customerFacade" ref="customerFacade"/>
		<property name="urlEncoderService" ref="urlEncoderService"/>
		<property name="storeSessionFacade" ref="storeSessionFacade"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="secureTokenService" ref="secureTokenService"/>
		<aop:scoped-proxy/>
	</bean>

	<bean id="rememberMeAuthenticationProvider"
		  class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<property name="key" value="performancestore"/>
		<aop:scoped-proxy/>
	</bean>

	<!-- Define all possible roles -->
	<bean id="b2bUserGroupProvider"
		  class="com.performance.security.impl.DefaultB2BUserGroupProvider">
		<property name="userService" ref="userService"/>
		<property name="b2BCustomerService" ref="defaultB2BCustomerService"/>
		<property name="authorizedGroups">
			<set value-type="java.lang.String">
				<value>b2bcustomergroup</value>
				<value>b2bmanagergroup</value>
				<value>b2bapprovergroup</value>
				<value>b2badmingroup</value>
			</set>
		</property>
		<property name="authorizedGroupsToCheckOut">
			<set value-type="java.lang.String">
				<value>b2bcustomergroup</value>
			</set>
		</property>
	</bean>
	<security:http use-expressions="true" auto-config="false" entry-point-ref="http403EntryPoint">
		<!-- Additional http configuration omitted -->
		<security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
		<security:custom-filter position="PRE_AUTH_FILTER" ref="octAuthFilter" />
	</security:http>

	<bean id="octAuthFilter" class="org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter">
		<property name="principalRequestHeader" value="bearer_token"/>
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<bean id="preauthAuthProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService">
			<bean id="userDetailsServiceWrapper"  class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<property name="userDetailsService" ref="customUserDetailsService"/>
			</bean>
		</property>
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="preauthAuthProvider" />
	</security:authentication-manager>

	<bean id="customUserDetailsService" class="com.performance.security.OctannerUserDetailsService"></bean>
	<bean id="http403EntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"></bean>

</beans>
